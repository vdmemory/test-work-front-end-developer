import {
    FETCH_PRODUCTS_REQUEST,
    FETCH_PRODUCTS_SUCCESS,
    FETCH_PRODUCTS_FAILURE,

    FETCH_PRODUCT_DETAILS_REQUEST,
    FETCH_PRODUCT_DETAILS_SUCCESS,
    FETCH_PRODUCT_DETAILS_FAILURE,

    FETCH_COMMENTS_REQUEST,
    FETCH_COMMENTS_SUCCESS,
    FETCH_COMMENTS_FAILURE,

    REGISTRATION_REQUEST,
    REGISTRATION_SUCCESS,
    REGISTRATION_FAILURE,

    LOGOUT,

    AUTHORIZATION_REQUEST,
    AUTHORIZATION_SUCCESS,
    AUTHORIZATION_FAILURE,

    SEND_FEEDBACK_REQUEST,
    SEND_FEEDBACK_SUCCESS,
    SEND_FEEDBACK_FAILURE

} from 'store/actions/actionTypes';

const initialAuth = JSON.parse(
    localStorage.getItem("isAuth")
);
const initialToken = localStorage.getItem('token');
const initialUsername = localStorage.getItem('username');

const initialState = {
    productsList: [],
    productDetails: {},
    commentsList: [],
    loading: true,
    error: null,
    token: initialToken || null,
    isAuth: initialAuth || false,
    username: initialUsername || ''
};

const rootReducer = (state = initialState, {type, payload}) => {

    switch (type) {
            // FETCH_PRODUCTS
        case FETCH_PRODUCTS_REQUEST:
            return {
                ...state,
                productsList: [],
                loading: true,
                error: null
            };
        case FETCH_PRODUCTS_SUCCESS:
            return {
                ...state,
                productsList: payload.data,
                loading: false,
                error: null
            };
        case FETCH_PRODUCTS_FAILURE:
            return {
                ...state,
                productsList: [],
                loading: false,
                error: payload.data
            };

            // FETCH_PRODUCT_DETAILS
        case FETCH_PRODUCT_DETAILS_REQUEST:
            return {
                ...state,
                productDetails: {},
                loading: true,
                error: null
            };
        case FETCH_PRODUCT_DETAILS_SUCCESS:
            return {
                ...state,
                productDetails: payload.data,
                loading: false,
                error: null
            };
        case FETCH_PRODUCT_DETAILS_FAILURE:
            return {
                ...state,
                productDetails: {},
                loading: false,
                error: payload.data
            };

            // FETCH_COMMENTS
        case FETCH_COMMENTS_REQUEST:
            return {
                ...state,
                commentsList: [],
                loading: true,
                error: null
            };
        case FETCH_COMMENTS_SUCCESS:
            return {
                ...state,
                commentsList: payload
                    .data
                    .reverse(),
                loading: false,
                error: null
            };
        case FETCH_COMMENTS_FAILURE:
            return {
                ...state,
                commentsList: [],
                loading: false,
                error: payload.data
            };

            // REGISTRATION
        case REGISTRATION_REQUEST:
            return {
                ...state,
                loading: true,
                error: null
            };
        case REGISTRATION_SUCCESS:
            return {
                ...state,
                loading: false,
                isAuth: payload.success,
                token: payload.token,
                username: payload.username,
                error: null
            };
        case REGISTRATION_FAILURE:
            return {
                ...state,
                isAuth: false,
                loading: false,
                error: payload.data
            };

            // LOGOUT
        case LOGOUT:
            return {
                ...state,
                isAuth: false,
                token: null
            }

            // AUTHORIZATION
        case AUTHORIZATION_REQUEST:
            return {
                ...state,
                loading: true,
                error: null
            };
        case AUTHORIZATION_SUCCESS:
            return {
                ...state,
                loading: false,
                isAuth: payload.success,
                token: payload.token,
                username: payload.username,
                error: null
            };
        case AUTHORIZATION_FAILURE:
            return {
                ...state,
                isAuth: false,
                loading: false,
                error: payload.data
            };

            // SENDFEEDBACK
        case SEND_FEEDBACK_REQUEST:
            return {
                ...state,
                loading: true,
                error: null
            };
        case SEND_FEEDBACK_SUCCESS:
            return {
                ...state,
                loading: false,
                error: null
            };
        case SEND_FEEDBACK_FAILURE:
            return {
                ...state,
                loading: false,
                error: payload.data
            };

        default:
            return state;
    }
};
export default rootReducer;