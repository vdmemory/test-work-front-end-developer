import {
  fetchProductsApi,
  fetchProductDetailsApi,
  fetchComentsApi,
  registrationApi,
  authorizationApi,
  sendFeedbackApi
} from "services/fetchDataApi";

import {
  productsRequested,
  productsLoaded,
  productsError,
  productDetailsRequested,
  productDetailsLoaded,
  productDetailsError,
  coommentsRequested,
  coommentsLoaded,
  coommentsError,
  registrationRequested,
  registrationLoaded,
  registrationError,
  logoutCreate,
  authorizationRequested,
  authorizationLoaded,
  authorizationError,
  sendFeedbackRequested,
  sendFeedbackLoaded,
  sendFeedbackError
} from "store/actions/actionCreators";

export const fetchProducts = () => async dispatch => {
  dispatch(productsRequested());
  try {
    const data = await fetchProductsApi();
    dispatch(productsLoaded(data));
  } catch (error) {
    dispatch(productsError(error));
  }
};

export const fetchProductDetails = id => async dispatch => {
  dispatch(productDetailsRequested());
  try {
    const data = await fetchProductDetailsApi(id);
    dispatch(productDetailsLoaded(data));
  } catch (error) {
    dispatch(productDetailsError(error));
  }
};

export const fetchComments = id => async dispatch => {
  dispatch(coommentsRequested());
  try {
    const data = await fetchComentsApi(id);
    dispatch(coommentsLoaded(data));
  } catch (error) {
    dispatch(coommentsError(error));
  }
};

export const registration = (username, password) => async dispatch => {
  dispatch(registrationRequested());
  try {
    const data = await registrationApi(username, password);
    if (data.success) {
      localStorage.setItem("token", data.token);
      localStorage.setItem("isAuth", data.success);
      localStorage.setItem("username", username);
      alert(`Hello ${username}, you are registered`);

      dispatch(registrationLoaded(data, username));
      return;
    }
    alert(data.message);
  } catch (error) {
    dispatch(registrationError(error));
  }
};

export const logout = () => dispatch => {
  localStorage.clear();
  dispatch(logoutCreate());
  alert("You are signed out!");
};

export const authorization = (username, password) => async dispatch => {
  dispatch(authorizationRequested());
  try {
    const data = await authorizationApi(username, password);
    if (data.success) {
      localStorage.setItem("token", data.token);
      localStorage.setItem("isAuth", data.success);
      localStorage.setItem("username", username);
      alert(`Hello ${username}, you are authorized`);
      dispatch(authorizationLoaded(data, username));
      return;
    }
    alert(data.message);
  } catch (error) {
    dispatch(authorizationError(error));
  }
};

export const sendFeedback = (id, rate, text) => async dispatch => {
  dispatch(sendFeedbackRequested());
  try {
    const data = await sendFeedbackApi(id, rate, text);
    dispatch(sendFeedbackLoaded(data));
  } catch (error) {
    dispatch(sendFeedbackError(error));
  }
};
